Node.JS

- 2009년 Ryan Dahl은 플리커의 파일업로드 진행 표시줄을 보았을 때 파일이 얼마나 업로드 되었는지 알기 위해서 서버에 쿼리를 전송해야 한다는 점을 보고 조금 더 쉬운 방법을 찾다가 고안한 프로그래밍입니다.

- 기존 자바스크립트들은 전부 브라우저에서 실행하는 형태였다면 node.js는 서버사이드에서 실행되는 자바스크립트입니다. 

- node.js는 Google V8 JavaScript 엔진을 사용하여 코드를 실행하고 많은 기본 모듈이 자바 스크립트에 사용됩니다. Node.js에는 응용 프로그램이 Apache HTTP Server 또는 IIS와 같은 소프트웨어 없이 웹 서버의 역할을 할 수 있도록 하는 내장 라이브러리가 있습니다.

- NPM은 node.js 서버 플랫폼에 사전 설치된 패키지 관리자입니다. npm 레지스크리에서 node.js 프로그램을 설치하는데 사용됩니다. 패키지 관리자를 사용하면 커뮤니티에서 오픈소스 node.js 라이브러리를 게시하고 공유할 수 있으며 라이브러리 설치, 업데이트 및 제거가 간단해집니다.


node.js 장점
- node.js 는 빠릅니다. (Google v8 엔진)
- NPM. 좋은 도구와 모듈을 공유하는 저장소
- 실시간 웹 애플리케이션을 개발할 수 있습니다. (웹 소켓)
- 프론트 엔드와 백엔드를 단일로 병합하여 개발할 수 있습니다.

node.js로 할 수 있는것들
1. node.js는 동적 페이지 컨텐츠를 생성 할 수 있습니다.
2. node.js는 서버에서 파일을 생성, 열기, 읽기, 쓰기, 삭제 및 닫을 수 있습니다.
3. node.js는 양식 데이터를 수집 할 수 있습니다.
4. node.js는 데이터베이스의 데이터를 추가, 삭제, 수정할 수 있습니다.

node.js 다운로드
https://nodejs.org/ko/download/ 


기본 내장 모듈

FileSystem 모듈 (fs)

readFile(file, encoding, callback) : 파일을 비동기적으로 읽습니다.
readFileSync(file, encoding) : 파일을 동기적으로 읽습니다.
writeFile(file, data, encoding, callback) : 파일을 비동기적으로 씁니다.
writeFileSync(file, data, encoding) : 파일을 동기적으로 씁니다.

동기와 비동기
프로그램이 동작하는 상태에서 완전히 해당 내용을 다 끝내고 다음으로 제어를 넘기면 동기, 동작이 끝나지 않은 상태에서도 제어권을 넘긴 후 프로그램을 계속 진행하면 비동기식이라고 합니다.

예외 처리
1. 프로그램이 실행되는 동안 문제가 발생할 때 대처할 수 있게 처리하는 것
2. 기본 예외처리(예외가 발생하지 않게 사전에 해결), 고급 예외처리(try 키워드, catch키워드, finally 키워드로 예외를 처리)


