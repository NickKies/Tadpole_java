
getter 와 setter 메소드
.html()		해당 요소의 HTML 콘텐츠를 반환하거나 설정함.
.text()		해당 요소의 텍스트 콘텐츠를 반환하거나 설정함.
.width()	선택한 요소 중에서 첫 번째 요소의 너비를 픽셀 단위의 정수로 반환하거나 설정함.
.height()	선택한 요소 중에서 첫 번째 요소의 높이를 픽셀 단위의 정수로 반환하거나 설정함.
.attr()		해당 요소의 명시된 속성의 속성값을 반환하거나 설정함.
.position()	선택한 요소 중에서 첫 번째 요소에 대해 특정 위치에 존재하는 객체를 반환함. (getter 메소드)
.val()		<form>요소의 값을 반환하거나 설정함.

요소의 추가

1. .append()
.append() 메소드는 선택한 요소의 '마지막'에 새로운 요소나 콘텐츠를 추가합니다.

2. .prepend()
.prepend() 메소드는 선택한 요소의 '처음'에 새로운 요소나 콘텐츠를 추가합니다.

$("li").prepend("새로 추가된 콘텐츠에요!");

3. .appendTo()
.appendTo() 메소드는 선택한 요소를 '해당 요소의 마지막'에 삽입합니다. 그 동작은 .append() 메소드와 같지만, 소스(source)와 타겟(target)의 위치가 서로 반대입니다.

4. .prependTo()
.prependTo() 메소드는 선택한 요소를 '해당 요소의 처음'에 삽입합니다. 그 동작은 .prepend() 메소드와 같지만, 소스(source)와 타겟(target)의 위치가 서로 반대입니다.

$("새로 추가된 콘텐츠에요!").prependTo("li");


기존 요소의 외부에 추가

1. .before()
.before() 메소드는 선택한 요소의 '바로 앞에' 새로운 요소나 콘텐츠를 추가합니다.

2. .after()
.after() 메소드는 선택한 요소의 '바로 뒤에' 새로운 요소나 콘텐츠를 추가합니다.

3. .insertBefore()
.insertBefore() 메소드는 선택한 요소를 '해당 요소의 앞에' 삽입합니다. 그 동작은 before() 메소드와 같지만, 소스(source)와 타겟(target)의 위치가 서로 반대입니다.

4. .insertAfter()
.insertAfter() 메소드는 선택한 요소를 '해당 요소의 뒤에' 삽입합니다. 그 동작은 .after() 메소드와 같지만, 소스(source)와 타겟(target)의 위치가 서로 반대입니다.


.wrap() 메소드
.wrap() 메소드는 '선택한 요소'를 포함하는 새로운 요소를 추가합니다.

.wrapAll() 메소드
.wrapAll() 메소드는 '선택한 모든 요소'를 포함하는 새로운 요소를 추가합니다.

.wrapInner() 메소드
.wrapInner() 메소드는 '선택한 요소에 포함되는' 새로운 요소를 추가합니다.


요소의 복사 및 삭제

요소의 복사

1. .clone()
.clone() 메소드는 선택한 요소를 복사하여 새로운 요소를 생성합니다. .clone() 메소드는 기존의 HTML 요소를 복사하여 새로운 HTML 요소를 생성할 뿐입니다. 따라서 반드시 .append() 메소드나 .appendTo() 메소드와 같은 다른 메소드를 이용하여 요소를 추가해야 합니다. .clone() 메소드를 사용하지 않고 .appendTo() 메소드만을 사용하면, 기존에 존재하는 HTML 요소를 그대로 추가하는 점이 다릅니다.

요소의 대체

1. .replaceAll()
.replaceAll() 메소드는 선택한 요소를 지정된 요소로 대체합니다. 이 메소드는 인수로 선택자나 제이쿼리 객체, HTML DOM 요소, 배열 등을 전달받을 수 있습니다.

2. .replaceWith()
.replaceWith() 메소드는 선택한 요소를 지정된 요소로 대체합니다. 이 메소드는 인수로 HTML 코드 형식의 문자열이나 제이쿼리 객체, HTML DOM 요소, 배열 등을 전달받을 수 있습니다. 또한, 선택한 요소를 대체할 수 있는 컨텐츠를 반환하는 함수를 인수로 전달받을 수도 있습니다. .replaceWith() 메소드의 동작은 .replaceAll() 메소드와 비슷하지만, 소스(source)와 타겟(target)의 위치가 서로 반대입니다. 또한, .replaceWith() 메소드는 지정된 요소로 대체되어 제거된 기존 요소를 반환합니다.


요소의 삭제

1. .remove()
.remove() 메소드는 선택한 요소를 DOM 트리에서 삭제합니다. 이때 삭제되는 요소와 연관된 제이쿼리 데이터나 이벤트도 모두 함께 삭제됩니다.

2. .detach()
.detach() 메소드는 선택한 요소를 DOM 트리에서 삭제합니다. 이때 삭제되는 요소와 연관된 제이쿼리 데이터나 이벤트는 삭제되지 않고, 계속 유지됩니다. .detach() 메소드가 반환하는 제이쿼리 객체를 .append()나 .prepend()와 같은 메소드에 인수로 전달하면 삭제한 요소를 다시 복구할 수도 있습니다.

3. .empty()
.empty() 메소드는 선택한 요소의 자식 요소를 모두 삭제합니다. 이때 .remove()나 .detach() 메소드와는 달리 선택된 요소 그 자체는 삭제되지 않습니다.

4. .unwrap()
.unwrap() 메소드는 선택한 요소의 부모 요소를 삭제합니다.


조상 요소의 탐색

트리 탐색(tree traversing)

트리 탐색(tree traversing)이란 특정 요소로부터 다른 요소들과의 관계를 통해 선택하길 원하는 요소까지 DOM 트리를 검색해 나아가는 과정을 의미합니다.

조상(ancestor) 요소의 탐색

1. .parent()
.parent() 메소드는 선택한 요소의 부모(parent) 요소를 선택합니다. 이때 선택자를 인수로 전달하여, 전달받은 선택자에 해당하는 부모 요소만을 선택할 수도 있습니다.

2. .parents()
.parents() 메소드는 선택한 요소의 조상(ancestor) 요소를 모두 선택합니다. 이때 선택자를 인수로 전달하여, 전달받은 선택자에 해당하는 조상 요소만을 선택할 수도 있습니다.

3. .parentsUntil()
.parentsUntil() 메소드는 선택한 요소의 조상 요소 중에서 전달받은 선택자에 해당하는 요소 바로 이전까지의 요소만을 모두 선택합니다. 이때 선택자를 인수로 전달하지 않으면, .parent() 메소드와 같이 선택한 요소의 조상 요소를 모두 선택합니다.

4. .closest()
.closest() 메소드는 자신을 포함한 조상 요소 중에서 전달받은 선택자에 해당하는 요소의 집합에서 가장 첫 번째 요소를 선택합니다. 이 메소드가 요소의 집합을 구하는 방식은 .parents() 메소드와 비슷하지만, 해당 요소의 조상 요소뿐만 아니라 해당 요소 자신까지도 검사하는 점이 다릅니다.


형제(sibling) 요소의 탐색

1. .siblings()
.siblings() 메소드는 선택한 요소의 형제(sibling) 요소 중에서 지정한 선택자에 해당하는 요소를 모두 선택합니다.

2. .next()
.next() 메소드는 선택한 요소의 바로 다음에 위치한 형제 요소를 선택합니다.

3. .nextAll()
.nextAll() 메소드는 선택한 요소의 다음에 위치한 형제 요소를 모두 선택합니다. 이때 선택자를 인수로 전달하여, 전달받은 선택자에 해당하는 형제 요소만을 선택할 수도 있습니다.

4. .nextUntil()
.nextUntil() 메소드는 선택한 요소의 형제 요소 중에서 전달받은 선택자에 해당하는 요소 바로 이전까지의 요소만을 모두 선택합니다. 이때 선택자를 인수로 전달하지 않으면, .nextAll() 메소드와 같이 선택한 요소의 다음에 위치한 형제 요소를 모두 선택합니다.

5. .prev()
선택한 요소의 바로 이전에 위치한 형제 요소를 선택합니다.

6. .prevAll()
선택한 요소의 이전에 위치한 형제 요소를 모두 선택합니다.

7. .prevUntil()
선택한 요소의 형제 요소 중에서 지정한 선택자에 해당하는 요소 바로 다음까지의 요소를 모두 선택합니다.


자손 요소의 탐색

자손(descendant) 요소의 탐색

1. .children()
.children() 메소드는 선택한 요소의 자식(child) 요소를 모두 선택합니다. 이때 선택자를 인수로 전달하여, 전달받은 선택자에 해당하는 자식 요소만을 선택할 수도 있습니다.

2. .find()
.find() 메소드는 선택한 요소의 자손(descendant) 요소 중에서 전달받은 선택자에 해당하는 자손 요소를 모두 선택합니다. 이때 별표("*")를 인수로 전달하여, 선택한 요소의 자손 요소를 모두 선택할 수도 있습니다.


기타 탐색 메소드

1. .add()
.add() 메소드는 선택한 요소의 집합에 전달받은 요소를 추가합니다.

2. .each()
.each() 메소드는 선택한 요소 집합의 요소마다 전달받은 콜백 함수를 실행합니다.

3. .end()
.end() 메소드는 마지막으로 실행한 메소드의 실행 전 상태로 선택한 요소의 집합을 복원해 줍니다.

4. .offsetParent()
.offsetParent() 메소드는 선택한 요소를 위치시킬 때 기준으로 사용된 조상 요소를 선택할 수 있습니다.

5. .contents()
.contents() 메소드는 선택한 요소의 자식(child) 요소를 텍스트 노드와 주석 노드까지 모두 포함하여 선택해 줍니다.

