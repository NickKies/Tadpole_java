6. 객체 지향 프로그래밍
소프트웨어를 개발할 떄에도 제품 제작처럼 부품에 해당하는 객체들을 먼저 만들고 이것들을 하나 씩 조립하여 완성된 프로그램을 만드는 기법
객체 지향 프로그래밍 (oop)

6.1.1 객체란
객체란 물리적으로 존재하거나 추상적으로 생각할 수 잇는 것 중에서 자신의 속성을 가지고 잇고 다른 것과 식별 가능한 것을 말한다.
예1) 사람은 이름, 나이 등의 속성에 웃다. 걷다 등의 동작이 있다.
예2) 자동차는 색상, 모델명 등의 속성에 달린다, 멈춘다 등의 동작이 있다.
-> 자바는 이 속성과 동작들을 각각 필드(Field)와 메소드(Method)라고 한다.


Cont 객체 모델링 

현실세계의 객체를 소프트웨어 객체로 설계하는 것
즉, 현실 세계의 속성과 동작을 추려내어 소프트웨어 객체의 필드와 메소드로 정의하는 과정


6.1.2 객체의 상호작용
현실세계에서 일어나는 모든 현상은 객체와 객체 간의 상호작용으로 이루어짐
소프트웨어도 객체들은 각각 독립적으로 존재하고 다른 객체와 서로 상호작용하면서 동작
객체들 사이의 상호작용 수단은 메소드
객체가 다른 객체의 기능을 이용하는 것이 메소드호출
리턴값 = 전자계산기객체. 메소드(매개값1,매개값2, ...);

cont 객체의 상호작용
 매개값은 메소드를 실행하기 위해 상호작용

객체 간의 메소드 호출을 의미 하며 매개값과 리턴값을 통해 데이터를 주고 박음

int result = Calculator.add(10,20);
리턴한 값을 int 변수에 저장