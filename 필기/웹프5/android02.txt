액티비티 생명주기

onCreate() : 액티비티가 생성될 때 호출되며 사용자 인터페이스 초기화에 사용됩니다. 
onstart() : 액티비티가 사용자에게 보여지기 바로 전에 호출 됩니다.

onRestart() : 액티비티가 멈췄다가 다시 시작되기 바로 전에 호출됩니다.
onResume() : 액티비티가 사용자와 상호작용하기 바로 전에 호출됩니다.
onPause() : 다른 액티비티가 보여질 때 호출됩니다. 데이터 저장, 스레드 중지등의 처리르 하기에 적당한 메소드입니다.
onStop() : 액티비티가 더이상 사용자에게 보여지지 않을 때 호출됩니다. 메모리가 부족할 경우에는 onStop() 메솓가 호출되지 않고 종료될 수 있습니다.
onDestroy() : 액티비티가 소멸될 때 호출됩니다. finish() 메소드가 호출되거나 시스템이 메모리 확보를 위해 액티비티를 파기할 때 호출됩니다.

안드로이드의 이벤트 처리

1. Layout 리소스 xml에서 Button onClick속성을 이용하여 연결
xml소스
android:onClick="login_btn_onClick"

java소스
public void login_btn_onClick(View view){

}

장점 : 이벤트를 빠르게 연결해서 사용할 수 있습니다.
단점 : 레이아웃을 먼저 구성해야하고, 코드의 양이 많아질경우 button과 이벤트와의 관계 파악이 힘습니다.

2. 익명클래스를 생성하여 이벤트 리스너를 사용하는 방법 
Button button1 = (Button) findViewByid(R.id.login_btn)
button1.setOnClickListener(new Button.OnClickListener(){
	public void onClick(View view){
		// 실행문
	}
});

장점 : 이벤트 리스너를 따로 생성하여 이벤트 관리를 체계적으로 할 수 있습니다. 
또한 button들 간의 연관성이 적은 경우 코드의 양이 적어 사용이 편합니다.
단점: 각 버튼에 대해 익명클래스를 만들어야 하므로 오히려 코드의 양이 많아질 가능성이 높습니다.


3. 이벤트 리스너 인터페이스를 구현하는 이벤트 리스너 클래스를 사용하는 방법

class BtnOnClickListener implements Button.OnClickListener {
	public void onClick(View view) {
		//실행문
	}
}

btnOnClickListener onClickListener = new BtnOnClickListener();
Button button1 = (Button)findViewByid(R.id.login_btn);
button1.setOnclickListener(onClickListener);

장점 : 명시적으로 이벤트 리스너 인터페이스를 상속하여 만들었기 때문에 코드의 가독성이 높고 추후 Button을 추가 확장하여 사용하기 좋습니다.
단점 : 클래스를 따로 구성해야 하기 때문에 개발상의 설계가 복잡해지거나 시간이 많이 걸릴 수 있습니다.

4. Activity에서 이벤트 리스너를 구현해서 사용하는 방법
public class MainActivity extends AppCompatActivity implements Button.OnClickListener {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
	Button button1 = (Button)findViewByid(R.id.login_btn);
	button1.setOnclickListener(this);
       	super.onCreate(savedInstanceState);
      	setContentView(R.layout.activity_main);

    }

     public void login_btn_onClick(View view) {
		// 실행문
	}
}

장점 : 이벤트 핸들러 함수에서 많은 수의 Activity 멤버를 엑세스 해야 하는 경우 편리합니다.
단점 : activity 마다 이벤트를 설정해야 하므로 다른 클래스에서 사용하기 불편합니다.


문제
사칙연산이 가능한 계산기를 작성

editext editext   textview
[        ] [       ]  = [       ] 

[+][-][*][/]  -> 버튼
















