

[단말기]          [미들웨어]       [서버]
                               ↔    [DB]
       {"result":"200"}
       {"result":"100"}
JSON 언어!

JSON은 JavaScript Object Notation의 약자. 
JSON은 좀더 쉽게 데이터를 교환하고 저장하기 위하여 만들어진 
텍스트 기반의 데이터 교환 표준입니다.

JSON의 특징
1. 자바스크립트를 확장하여 만들어짐
2. 자바스크립트 객체 표기법을 따름
3. 사람과 기계가 모두 읽기 편하도록 고안
4. 프로그래밍 언어와 운영체제에 독립적

사용범위
문자열을 전송받은 후에 해당 문자열을 바로 파싱하므로
XML보다 더욱 빠른 처리 속도를 보여줌. 
따라서 HTML과 자바스크립트가 연동되어 빠른 응답이 필요한 
웹 환경에서 많이 사용.

단점
전송받은 데이터의 무결성을 사용자가 직접 검증해야함.

{"idx":1,"user_id":"apple","pwd":"1111"}


JSON 검증 사이트
https://jsonlint.com/

리터럴(literal)
변수와 다르게 해석되는 값 그 자체를 의미.

"idx":1   <--- 1이 값
"user_id":"apple"  <--- "apple"이 값
* 숫자는 따옴표를 사용하지 않으며,
 문자 또는 문자열은 따옴표를 사용.

객체(object)
객체란 name과 value으로 구성된  property의 정렬되지 않은 집합

예) 회원객체
{"idx":1,"user_id":"apple","pwd":"1111"}

주석
주석이 들어가지 않는 것이 바람직. 반드시 주석을 써야한다면
데이터를 공유하기 전에 먼저 제거해야함.


구조
1. 데이터는 이름과 값의 쌍으로 이루어짐
2. 데이터는 쉽표(,)로 나열
3. 객체는 중괄호({})로 둘러 쌓아 표현
예) {"idx":1,"user_id":"apple","pwd":"1111"}
4. 배열은 대괄호[]로 둘러 쌓아 표현
{"member":[{"idx":1,"user_id":"apple","pwd":"1111"},
{"idx":2,"user_id":"banana","pwd":"2222"},
{"idx":3,"user_id":"orange","pwd":"3333"}]}

타입
1. 숫자
- 정수 {"age"=20}
- 실수 {"weight":60.5}
* 8진수나 16진수등 표현하는 방법은 제공하지 않습니다.

2. 문자열
{"user_id":"apple"}
* 자바스크립트는 쌍따옴표("")와 따옴표('')를 모두 사용할 수 있지만,
JSON에서는 오직 쌍따옴표("")만을 사용할 수 있습니다.
- 특수한 문자(이스케이프 시퀀스)
\b     백스페이스
\f     form feed : 인쇄위치 또는 커서 표시 위치를 같은줄 맨 앞으로
\n     개행
\r     carriage return : 다음줄 가장 첫 위치로 이동
\t     tab
\"     큰따옴표
\/     슬래시
\\     역슬래시

3. 불리언
{"isemail":true}
* JSON에서는 불리언 값은 항상 true와 false를 소문자로 표기해야함

4. 객체
객체란 name과 value으로 구성된  properties의 정렬되지 않은 집합
{"idx":1,"user_id":"apple","pwd":"1111"}
* properties의 순서는 중요하지 않음
- 객체 안이 객체
{
  "idx":1,
  "user_id":"apple",
  "pwd":"1111",
  "child":{
           "child_name":"findapple",
           "phone":"01011112222"
   }
}

5. 배열
[{"":"","":""},{"":"","":""},{"":"","":""}]
* JSON 배열의 index는 언제나 0부터 시작.

6. null
null이란 아무런 값도 가지고 있지 않은 빈 값을 의미.
null 값은 항상 소문자로 표기.
{"idx":1,"user_id":"apple","pwd":"1111","email":null}













