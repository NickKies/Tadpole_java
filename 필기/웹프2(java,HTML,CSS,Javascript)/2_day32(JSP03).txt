GET 방식과 POST 방식
GET 방식은 주소에 데이터(data)를 추가하여 전달하는 방식입니다.
GET 방식의 HTTP 요청은 브라우저에 의해 캐시되어(cached) 저장됩니다. 또한 쿼리 문자열에 포함되어 전송되므로, 길이의 제한이 있씁니다. 따라서 보안상 취약점이 존재하므로, 중요한 데이터는 POST 방식을 사용하여 요청하는 것이 좋습니다.

POST 방식은 데이터를 별도로 첨부하여 전달하는 방식입니다.
POST 방식의 HTTP 요청은 브라우저에 의해 캐시되지 않으므로, 브라우저 히스토리에도 남지 않습니다. 또한, HTTP 요청에 의한 데이터는 쿼리 문자열과는 별도로 전송됩니다. 따라서 데이터의 길이에 대한 제한도 없으며, GET 방식보다 보안성이 높습니다.

readyState 프로퍼티
XMLHttpRequest 객체의 현재 상태를 나타냅니다.

 1. UNSENT (숫자 0) : XMLHttpRequest 객체가 생성됨
 2. OPENED (숫자 1) : open() 메소드가 성공적으로 실행됨
 3. HEADERS_RECEIVED (숫자2) : 모든 요청에 대한 응답이 도착함
 4. LOADING (숫자 3) : 요청한 데이터를 처리 중임.
 5. DONE (숫자 4) : 요청한 데이터의 처리가 완료되어 응답할 준비가 완료됨.

status 프로퍼티
서버의 문서 상태를 나타냅니다.

 - 200 : 서버에 문서가 존재함
 - 404 : 서버에 문서가 존재하지 않음.

onreadystatechange 프로퍼티
XMLHttpRequest 객체의 readyStare 프로퍼티 값이 변할 때마다 자동으로 호출되는 함수를 설정합니다. 이 함수는 서버에서 응답이 도착할 때까지 readyState 프로퍼티 값의 변화에 따라 총5번 호출됩니다. 이 프로퍼티를 이용하면 서버에 요천한 데이터가 존재하고, 서버로부터 응답이 도착하는 순간을 특정할 수 있습니다.


Request 객체

String getProtocol() : 웹 서버로 요청 시, 사용 중인 프로토콜을 리턴합니다.
String getServerName() : 웹 서버로 요청시, 서버의 도메인 이름을 리턴합니다.
String getMethod() : 웹서버로 요청시, 요청에 사용된 요청방식(GET, POST, PUT 등)을 리턴합니다.
String getQueryString() : 웹 서버로 요청 시, 요청에 사용된 QeuryString을 리턴합니다.
String getRemoteAddr() : 웹 서버로 정보를 요청한 웹 브라우저의 IP주소를 리턴합니다.
String getRequestURI() : 웹 서버로 요청시, 요청에 사용된 URL로 부터 URI 값을 리턴합니다.
int getserverPort() :  웹 서버로 요청시, 서버의 Port 번호를 리턴합니다.
String getContextPath() : 해당 JSP 페이지가 속한 웹 어플리케이션의 콘텍스트 경로를 리턴합니다.
String getHeader(name) : 웹 서버로 요청 시, HTTP 요청 헤더(header)의 헤더 이름인 name에 해당하는 속성값을 리턴합니다.
Enumeration getHeaderNames() : 웹 서버로 요청 시 , HTTP 요청헤더에 있는 모든 헤더 이름을 리턴합니다.


Response 객체

void setHeader(name, value) : 헤더 정보이 값을 수정하는 메소드로, name에 해당하는 헤더 정보를 value 값으로 설정합니다.
void setContentType(type) : 웹 브라우저의 요청의 결과로 보일 페이지의 contentType을 설정합니다.
void sendRedirect(url) : 페이지를 이동시키는 메소드로, url로 주어진 페이지로 제어가 이동합니다.


Out 객체

void clearBuffer() : 현재 출력 버퍼에 저장되어 있는 내용을 웹 브라우저에 전송하지 않고 비웁니다.
String pinrtln(str) : 주어진 str 값을 웹 브라우저에 출력합니다. 이때 줄 바꿈은 적용되지 않습니다.
void flush() : 현재 출력 버퍼에 저장되어 있는 내용을 웹 브라우저에 전송하고 비웁니다.
void close() : 현재 출력 버퍼에 저장되어 있는 내용을 웹 브라우저에 전송하고 출력 스트림을 닫습니다.
































