JSP의 구성요소

1. 스크립트(Script) 요소
	1) <% .. %> (스크립트릿) : JSP 페이지 내부에 자바코드를 삽입
	2) <%= .. %> (표현식) : 출력결과(HTML 요소내)에 값을 넣기위해 사용합니다.
	3) <%! ..%> (선언) : JSP 페이지 내부에 자바 메서드를 선언합니다.


2. 지시어(디렉티브:driective)
	지시어는 JSP에 대한 설정 정보 또는 JSP 페이지에 다른 문서를 포함(include) 시킬때 사용합니다
	1) <%@ page ... %> : 스크립트언어, 에러페이지 지정, 버퍼 설정등을 정의합니다.
	2) <%@ include ... %> : 컴파일단계에서 다른문서를 현재 문서에 포함하도록 합니다.
	3) <%@ tablib ... %> : 태그 라이브러리를 선언합니다.

3. 내장객체 (Implicit Dbject)
	1) request : 클라이언트에서 서버로 보내지는 요청과 관련된 객체입니다.
	2) response : 서버에서 클라이언트로 보내지는 요청과 관련된 객체입니다.
	3) out : 출력을 클라이언트로 보내는 객체입니다.
	4) session : 서버측 웹컨테이너에 사용자의 상태를 관리하는 객체입니다.
	5) application : 어플리케이션 전반에 걸친 정보를 관리하는 객체입니다. 
	6) config : 페이지와 관련된 서블릿 설정(servlet config) 객체입니다.
	7) page : 페이지에 대한 실제 인스턴스(자바클래스의 객체)를 저장하는 객체입니다.
	8) Exception : 이전 페이지의 에러를 저장하고 있는 객체입니다.

Ajax

Ajax란?
Asynchronous JavaScript and XML의 약자입니다. Ajax는 빠르게 동작하는 동적인 웹 페이지를 만들기 위한 개발 기법의 하나입니다. Ajax는 웹 페이지 전체를 다시 로딩하지 않고도, 웹 페이지의 일부분만을 갱신할 수 있습니다. 즉 Ajax를 이용하면 백그라운드 영역에서 서버와 통신하여, 그 결과를 웹 페이지의 일부분 에만 표시할 수 있습니다. 이때 서버와 아래와 같은 데이터를 주고 받을 수 있습니다.

- JSON
- XML
- HTML
- 텍스트 파일 등

Ajax의 장점
1. 웹 페이지 전체를 다시 로딩하지 않고도, 웹 페이지의 일부분만을 갱신할 수 있습니다.
2. 웹 페이지가 로드된 후에 서버로 데이터 요청을 보낼 수 있습니다.
3. 웹 페이지가 로드된 후에 서버로부터 데이터를 받을 수 있습니다.
4. 백그라운드 영역에서 서버로 데이터를 보낼 수 있습니다.

Ajax의 한계
1. 클라이언트가 서버에 데이터를 요청하는 클라이언트 풀링 방식을 사용하므로, 서버 푸시 방식의 실시간 서비스는 만들 수 없습니다. 
2. 바이너리 데이터를 보내거나 받을 수 없습니다.
3. 스크립트가 포함된 서버가 아닌 다른 서버로 Ajax 요청을 보래 수는 없습니다.
4. 클라이언트의 PC로 Ajax요청을 보낼 수는 없습니다.

Ajax의 구성요소
 - 웹페이지의 표현을 위한 HTML과 CSS
 - 데이터에 접근하거나 화면 구성을 동적으로 조작하기 위해 사용되는 DOM모델
 - 데이터의 교환을 위한 JSON이나 XML
 - 웹 서버와의 비동기식 통신을 위한 XMLHttpRequest 객체
 - 위에서 언급한 모든 기술을 결합하여 사용자의 작업 흐름을 제어하는 데 사용되는 자바스크립트

XMLHttpRequest 객체
Ajax의 가장 핵심적인 구성 요소는 바로 XMLHttpRequest 객체입니다. Ajax에서 XMLHttpRequest 객체는 웹 브라우저가 서버와 데이터를 교환할 때 사용됩니다. 웹 브라우저가 백그라운드에서 계속해서 서버와 통신 할 수 있는 것은 바로 이 객체를 사용하기 때문입니다. 

XMLHttpRequest 객체의 생성
var 변수이름 = new XMLHttpRequest();

서버에 요청(request)하기
Ajax에서는 XMLHttpRequest 객체를 사용하여 서버와 데이터를 교환합니다. 따라서 서버에 요청을 보내기 위해서는 우선 XMLHttpRequest 인스턴스를 생성해야 합니다.
XMLHttpRequest 인스턴스의 open() 메소드와 send() 메소드를 사용하여 요청을 보낼 수 있습니다.


open() 메소드
서버로 보낼 Ajax 요청의 형식을 설정합니다.

open(전달방식, URL주소, 동기여부);
전달 방식은 요청을 전달할 방식으로 GET방식과 POST 방식 중 하나를 선택할 수 있습니다.
URL 주소는 요청을 처리할 서버의 파일 주소를 전달합니다.
동기 여부는 요청을 동기식으로 전달할지 비동기식으로 전달할지를 전달합니다.

send() 메소드
작성된 Ajax 요청을 서버로 전달합니다.
이 메소드는 전달 방식에 따라 인수를 가질 수도 안 가질 수도 있습니다.
send();		// GET방식
send(문자열);	// POST방식






























