노드의 추가
1. appendChild()
새로운 노드를 해당 노드의 자식 노드 리스트(child node list)의 맨 마지막에 추가합니다

2. insertBefore()
새로운 노드를 특정 자식 노드 바로 앞에 추가합니다.
부모노드.insertBefore(새로운 자식노드, 기준자식노드);

1. 새로운 자식 노드 : 자식 노드 리스트에 새롭게 추가할 자식 노드를 전달합니다.
2. 기준 자식 노드 : 새로운 노드를 삽입할 때 기준이 되는 노드로, 이 노드 바로 앞에 새로운 노드가 추가됩니다.

3. insertData() 
텍스트 노드의 텍스트 데이터에 새로운 텍스트를 추가합니다.
텍스트노드.insetData(오픈셋, 새로운 데이터);

1. 오프셋(offset) : 오프셋 값은 0부터 시작하며, 기존 텍스트 데이터의 몇 번째 위치부터 추가할지를 전달합니다.

새로운 데이터 : 새로이 삽입할 텍스트 데이터를 전달합니다.


노드의 생성

1. creatElement()
새로운 요소 노드를 만들 수 있습니다.

2. creatAttribute()
새로운 속성 노드를 만들 수 있습니다. 만약 같은 이름의 속성 노드가 이미 존재하면, 기존의 속성 노드는 새로운 속성 노드로 대체됩니다. 이미 존재하는 요소 노드에 속성 노드를 생성하고자 할 때에는 setAtteribute() 메소드를 사용할 수 있습니다.

3. createTextNode()
새로운 텍스트 노드를 만들수 있습니다.


노드의 제거

1. removeChild()
자식 노드 리스트에서 특정 자식 노드를 제거합니다. 이 메소드는 성공적으로 노드가 제거 되면 제거된 노드를 반환합니다. 노드가 제거될 때에는 제거되는 노드의 모든 자식 노드들도 다 같이 제거됩니다.

2. removeAttribute()
속성의 이름을 이용하여 특정 속성 노드를 제거합니다.


노드의 복제

cloneNode() 메소드
기존의 존재하는 노드와 똑같은 새로운 노드를 생성하여 반환합니다.

복제할노드.cloneNode(자식노드복제여부);

- 자식 노드 복제 여부 : 전달된 값이 true이면 복제되는 노드의 모든 속성 노드와 자식 노드도 같이 복제하며, false 이면 속성 노드만 복제하고 자식 노드는 복제하지 않습니다.

노드의 값 변경
nodeValue 프로퍼티를 사용하면 특정 노드의 값을 변경할 수 있습니다. 또한, setAttribute() 메소드는 속성 노드의 속성값을 변경할 수 있게 해줍니다.

요소 노드의 텍스트
자신이 직접 텍스트값을 가지지는 않습니다. 요소 노드의 텍스트는 요소 노드의 자식 노드인 텍스트 노드에 저장됩니다. 따라서 요소 노드의 텍스트 값을 확인하거나 변경하고자 할 때는 요소 노드에 포함된 테스트 노드에 접근해야 합니다.

요소 노드의 교체
replaceChild() 메소드를 사용하면 기존의 요소 노드를 새로운 요소 노드로 교체할 수 있습니다.

교체할노드 = 부모노드.replaceChild(새로운 자식노드, 기존자식노드);

1. 새로운 자식노드  : 자식 노드 리스트에 새롭게 추가할 요소 노드를 전달합니다.
2. 기존 자식 노드 : 자식 노드 리스트에서 제거할 요소 노드를 전달합니다.

텍스트 노드의 데이터 교체

replaceData() 메소드를 사용하면 텍스트 노드의 텍스트 데이터를 바꿀 수 있습니다.

텍스트노드.replaceData(오프셋, 교체할 문자수, 새로운 데이터);

1. 오프셋 : 0부터 시작하며, 기존 텍스트 데이터의 몇 번쨰 문자부터 교체할지를 전달합니다.
2. 교체할 문자 수 : 기존 텍스트 노드의 데이터로부터 교체할 총 문자 수를 전달합니다.
3. 새로운 데이터 : 새로이 삽입할 텍스트 데이터를 전달합니다.



form 객체의 선택 방법
- 자바스ㅡ립트는 일반적으로 폼에 접근시 id 또는 name 을 이용 할 수 있습니다.
- document.forms 컬렉션을 이용하여 접근할 수 있습니다.


<form name="myform" id="myform">
	아이디: <input type="text" name="id"><br>
	패스워드:<input type="password" name="pw"><br>
	<input type="button" value="전송">
</form>

*폼에 접근하는 방법
var frm = document.myform;
var frm = document.getElementById("myform");

*아이디에 접근하는 방법
var id = frm.id;
var id = frm.element[0];
var id = frm.elements["id"];


















