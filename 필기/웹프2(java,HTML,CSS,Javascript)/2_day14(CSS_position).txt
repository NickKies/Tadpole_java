display 속성
웹 페이지의 레이아웃을 결정하는 CSS의 중요한 속성 중 하나입니다. 이 속성은 해당 HTML요소가 웹 브라우저에 언제 어떻게 보이는가를 결정합니다.

1. 블록(block)
display 속성값이 블록인 요소는 언제나 새로운 라인에서 시작하며, 해당 라인의 모든 너비를 차지합니다.
예) div, h1, p, ul, ol, form 요소는 대표적인 블록 요소입니다.

2. 인라인(inline)
display 속성값이 인라인인 요소는 새로운 라인에서 시작하지 않습니다. 또한, 요소의 너비도 해당 라인 전체가 아닌 해당 HTML 요소의 내용만큼만 차지합니다.
span, a, img 요소는 대표적인 인라인 요소입니다.

3. 인라인 과 인라인 블록
1) 인라인
- width/height 적용 불가능
- margin/padding-top/bottom 적용 불가능
- line-height 원하는 대로 적용 불가능 (span에 적용을 할 수 없고 감싸고 있는 div 전체 크기에만 적용 가능)
2) 인라인 블록
- width/height 적용 가능
- margin/padding-top/bottom 적용 가능
- line-height 적용 가능
단, inline-block 끼리 공백이 생기게 되는데 이를 해결하기 위해 div에 {font-size:0} 을 적용하면 문제가 해결됩니다. 또한 line-block끼리 높이가 맞지 않을 경우 상위 공백이 생기는데, 이는 {vertical-align:---;}값으로 top을 맞춰 주면 해결됩니다.


visibility 속성
HTML 요소가 웹 페이지에 표현될지 아닐지만을 결정합니다. 따라서 웹 페이지에는 나타나지 않더라도 레이아웃 내에는 여전히 존재하게 되며, 코드 내에도 당연히 존재하게 됩니다. visibility 속성을 자바스크립트와 함께 사용하면 매우 복잡한 메뉴나 레이아웃을 손쉽게 만들 수 있습니다.

1. visible : 해당 HTML 요소를 웹페이지에 나타냅니다.
2. hidden : HTML 요소를 웹페이지에 나타내지 않습니다. 하지만 여전히 웹 페이지의 레이아웃에는 존재합니다.
3. collapse : 이 속성값은 동적인 테이블에서만 사용할 수 있으며, 테이블의 테두리를 한 줄로만 보여줍니다.

display: none => 웹페이지에서 더이상 나타나지 않고 웹페이지 레이아웃에서도 영향 줍니다. 
visibility: hidden => 눈에 보이지만 않을 뿐, 여전히 웹 페이지의 레이아웃에서는 존재합니다.


아이디 [              ] 중복체크
사용할 수 있는 아이디 입니다.
패스워드 [             ]


*************************
position 속성
HTML 요소가 위치를 결정하는 방시글 설정합니다.

1. static position 지정방식
위치를 결정하는 가장 기본적인 방식은 정적 위치 지정방식입니다.
position 속성값이 static으로 설정된 요소는 top, right, bottom, left 속성값에 영향을 받지 않습니다. 정적위치 지정 방식은 단순히 웹 페이지의 흐름에 따라 차례대로 요소들을 위치시키는 방식입니다.
* 모든 HTML 요소의 position 속성의 기본 설정값은 static입니다.

2. relative position 지정 방식
기본위치를 기준으로 위치를 설정하는 방식입니다. HTML 요소의 기본 위치란 해당 요소가 정적 위치 지정 방식일 때 결정되는 위치를 의미합니다.

3. fixed position 지정 방식
viewport를 기준으로 위치를 설정하는 방식입니다. 즉, 웹 페이지가 스크롤이 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다.

뷰포트란?
모바일 브라우저들은 뷰포트로 알려진 가상의 window 페이지를 렌더링합니다. 즉 화면 display 상의 표시 영역을 말합니다.
데스크탑의 뷰포트는 브라우저 창의 뷰포트와 같고, 사용자가 브라우저 창의 크기를 조정하면서 뷰포트의 크기도 조절할 수 있습니다. 즉 웹페이지가 뷰포트보다 크면 스크롤을 하여 나머지 영역을 볼 수 있습니다. 반면에 모바일 뷰포트는 창보다 크거나 작을 수 있고 상하 좌우로 움직이거나, 더블탭, 줌인, 줌아웃을 통해 뷰포트의 배율을 변경할 수 있습니다.(크기를 조절하는 것이 아닙니다.)

뷰포트를 쓰는 이유?
모바일 브라우저에서 뷰포트를 사용하는 이유는 모바일 브라우저가 웹페이지를 브라우징 하는 특징에 있습니다. 현재 스마트폰 브라우저는 모바일 환경에서도 데스크탑 환경처럼 웹페이지 전체를 자연스럽게 브라우징 할 수 있도록 풀 브라우징을 지원합니다. 이때문에 데스크탑에 기반하여 설계된 웹페이지를 모바일에서 보면 기본 뷰포트가 980px이고 이로 인해 ㄴ용이 작게 보입니다. 작은 화면의 모바일 단말기에 웹페이지를 모두 표시하려고 하니 전체적인 페이지의 배율이 조정되는 것입니다. 결과적으로 모바일 화면에 맞도록 전체적인 페이지가 축소되어 보이지만 페이지의 컨텐츠는 배율 축소가 발생해 가독성이 떨어지게 됩니다. 이때 뷰포트를 설정하면 다양한 모바일 기기에서도 페이지의 너비나 화면 배율을 설정할 수 있습니다.

4. absolute position 지정 방식
고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다. 단지 뷰포트를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor)요소를 기준으로 위치를 설정하게 됩니다. 하지만 위치가 설정된 조상 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다. 
*위치가 설정된 요소라는 것은 정적 위치 지정 방식을 제외한 다른 방식으로 위치가 설정된 요소를 의미합니다.


z-index 속성
HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다. z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 stack의 순서를 설정합니다. 스텍의 순서는 양수나 음수 모두 설정 할 수 있으며, 크기가 ㅋㄹ수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치합니다.
