파일 입출력

자바에서는 콘솔과 같은 표준 입출력 장치를 위해 System이라는 표준 입출력 클래스를 정의하고 있습니다.

System.in : 콘솔로부터 데이터를 입력받습니다.
System.out : 콘솔로 데이터를 출력합니다.
System.err : 콘솔로 데이터를 출력합니다.

File 클래스

입출력 스트림을 이용하면 파일을 통한 입출력을 할 수 있습니다. 하지만 파일의 제거나 디렉터리에 관한 작업등은 입출력 스트림을 통해서는 수행할 수 없습니다. 따라서 입출력 작업 이외에 파일과 디렉토리에 관한 작업을 File 클래스를 통해 처리하도록 되어 있습니다.

스트림(stream)
자바 프로그램에서는 파일이나 콘솔의 입출력을 직접 다루지 않고 스트림이라는 흐름을 통해 다룹니다. 스트림이란 실제의 입력이나 출력이 표현된 데이터의 이상화된 흐름을 의미합니다. 즉, 스트림은 운영체제에 의해 생성되는 가상의 연결 고리를 의미하며 중간 매개자 역할을 합니다. 

		      (운영체제)		키보드
자바프로그램	<-----	스트림	---->	마우스
					모니터
					프린트
					네트워트

버퍼(buffer)
스트림은 내부에 버퍼라는 임시 메모리 공간을 가지고 있습니다. 버퍼를 이ㅛㅇ하면 입력과 출력을 좀 더 효율적으로 처리할 수 있게 됩니다.

- 문자를 하나씩 전달 하는 것이 아닌 묶어서 한 번에 전달하므로, 전송 시간이 적게 걸려 성능이 향상됩니다. 
- 사용자가 문자를 잘못 입력했을 경우 수정을 할 수 있습니다.

			     운영체제
자바프로그램	<----------------------------->		키보드

			     buffer
			[안녕하세요!!   ]
자바프로그램	<----------------------------->		키보드



제네릭(generic)

자바에서 제네릭이란 데이터의 타입을 일반화한다 라는 것을 의미합니다. 클래스나 메소드에서 사용할 내부 데이터 타입을 컴파일 시에 미리 지정하는 방법입니다. 컴파일시에 미리 타입 검사를 수행하면 클래스나 메소드 내부에서 사용되는 객체의 타입 안정성을 높일 수 있습니다. 또한 반환값에 대한 타입 변환 및 타입 검사에 들어가는 노력을 줄일 수 있습니다.

ArrayList<String> myarr = new ArrayList<String>();


데이터베이스(DataBase)

데이터베이스는 통합하여 관리되는 데이터의 집합체를 의미합니다.

1. 사용자의 질의에 대하여 즉각적인 처리와 응답이 이루어집니다.
2. 생성, 수정, 삭제를 통하여 항상 최신의 데이터를 유지합니다.
3. 사용자들이 원하는 데이터를 동시에 공유할 수 있습니다.
4. 사용자가 원하는 데이터를 주소가 아닌 내용에 따라 참조할 수 있습니다.
5. 응용프로그램과 데이터베이스는 독립되어 있으므로, 데이터의 논리적 구조와 응용프로그램은 별개로 동작 됩니다.

마리아DB 다운로드
https://downloads.mariadb.org/

SQL(Structured Query Language)
SQL은 데이터베이스에서 데이터를 정의, 조작 제어하기 위해 사용되는 언어입니다. 

관계형 데이터베이스(relational database)
관계형 데이터베이스란 테이블로 이루어져 있으며, 이 테이블은 키와 값의 관계를 나타냅니다. 이처럼 데이터의 종속성을 관계로 표현하는 것이 관계형 데이터베이스의 특징입니다.

1. 열
각각의 열은 유일한 이름을 가지고 있으며, 자신만의 타입을 가지고 있습니다. 열은 필드, 컬럼, 속성(attribute) 라고 불립니다.

2. 행
행은 관계된 데이터의 묶음을 의미합니다. 한 테이블의 모든 행은 같은 수의 열을 가지고 있습니다. 이러한 행은 튜플, 레코드, 로우 라고 불립니다.

3. 값
테이블은 각각의 행과 열에 대응하는 값을 가지고 있습니다. 이러한 값은 열의 타입에 맞는 값이어야 합니다.


SQL 문법

데이터베이스 목록보기
show databases;

데이터베이스 생성
CREATE DATABASE 데이터베이스이름
예)
create database javatest;

데이터베이스 삭제
DROP DATABASE 데이터베이스이름

데이터베이스 선택
USE 데이터베이스이름
예)
use javatest;

테이블 목록보기
show tables;

간단한 테이블 만들기
CREATE TABLE test
(
	id int,
	name varchar(20),
	pass varchar(20),
	gender varchar(10)
)

데이터 확인하기
select * from test;

테이블 생성
CREATE TABLE 테이블이름
(
	필드이름1 필드타입1 제약조건,
	필드이름2 필드타입2 제약조건,
	...
)



