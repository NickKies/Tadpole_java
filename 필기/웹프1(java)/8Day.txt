메인 메소드(main method)

메인 메소드는 자바 어플리케이션이 실행될 때 가장 먼저 실행되며 프로그램이 구동되는 메소드입니다. 이때 String[] args는 파라미터로 동작합니다.

public static void main(String[] args){
	// args는 메인 메소드로 입력된 매개변수를 저장하는 String 배열입니다.
}


객체지향 프로그래밍

- 절차지향 프로그래밍 기법
물이 위에서 아래로 흐르는 것처럼 순차적인 처리가 중요시 되며 프로그램 전체가 유기적으로 연결 되도록 만드는 프로그램 기법입니다. 대표적인 절차지향 언어에는 C언어가 있습니다.	

- 객체지향 프로그래밍 기법
실제 세계를 모델링하여 소프트웨어를 개발하는 방법이니다. 데이터와 절차를 하나의 덩어리로 묶어서 생각합니다.

- 객체
실생활에서 우리가 인식할 수 있는 사물로 설명할 수 있습니다. 객체의 상태와 행동을 구체화하는 형태의 프로그래밍이 객체 지향 프로그래밍입니다.

- 클래스
객체를 정의하는 틀 또는 설계도와 같은 의미로 사용됩니다.
자바에서는 이러한 설계도인 클래스를 가지고, 여러 객체를 생성하여 사용하게 됩니다. 클래스는 객체의 상태를 나타내는 필드와 객체의 행동을 나타내는 메소드로 구성됩니다. 필드란 클래스에 포함된 변수를 의미하고 메소드란 어떠한 특정 작업을 수행하기 위한 명령문의 집합이라 할 수 있습니다.

- 인스턴스
자바에서는 클래스를 사용하기 위해서 해당 클래스 타입의 객체를 선언해야 합니다. 이렇게 클래스로부터 객체를 선어하는 과정을 클래스의 인스턴스화라고 합니다. 이렇게 선언된 해당 클래스 타입의 객체를 인스턴스라고 합니다. 즉 인스턴스란 메모리에 할당된 객체를 의미합니다.

문법

class 클래스명 {
	필드1;	// 클래스에 포함된 변수
	필드2;
	필드3;
	...

	메소드1(); // 클래스에서 어떤 특정작업을 수행하기 위한 명령문의 집합
	메소드2();
	메소드3();
	..
}

인스턴스 생성

문법
클래스이름 객체참조변수이름;
객체참조변수이름 = new 클래스이름();

Car sonata;
sonata = new Car();

클래스이름 객체참조변수이름 = new 클래스이름();
Car sonanta = new Car();

생성자

객체를 만들 때 필수적인 데이터를 가지고 객체가 만들어지고 싶다면 생성자를 이용해 가능합니다.
생성자는 객체지향 프로그래밍에서 객체를 초기화 하는데 사용됩니다.
메소드처럼 선언하지만 메소드의 리턴타입이 없습니다. 또한 메소드의 이름이 클래스의 이름과 같습니다.

